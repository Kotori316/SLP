name: Build Test

on:
  push:
    branches:
      - "*"
    tags:
      - "!*"

jobs:
  debug_log:
    runs-on: ubuntu-latest
    steps:
      - name: Check Branch name
        run: echo "${{ github.event.base_ref }}"
      - name: Check Ref name
        run: echo "${{ github.ref }}"
      - name: OS name
        run: |
          echo "${{ runner.os }}"
          cat /etc/os-release
      - name: Time
        run: date && ncal -bh && ncal -bhj
      - name: Environment Values
        run: env | grep -i github
      - name: Job Values
        run: echo "${JOB_CONTECT}"
        env:
          JOB_CONTECT: ${{ toJson(job) }}
      - name: Neofetch
        run: |
          set -eu
          echo "::group::APT"
          sudo apt-get update && sudo apt-get install -y neofetch
          echo "::endgroup::"
          echo "neofetch"
          neofetch
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # test against some Java versions, as well as specific updates of LTS versions:
        java: [ 8, 11 ]
        # test against some forge versions including recommend version.
        forge: [ fixed ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Check Dependency
        run: chmod +x ./gradlew && ./gradlew data --no-daemon
        env:
          CI_FORGE: ${{ matrix.forge }}
      - name: download_assets
        run: |
          chmod +x ./gradlew
          echo "::group::Download Assets"
          ./gradlew downloadAssets || ./gradlew downloadAssets || (sleep 30s && ./gradlew downloadAssets)
          echo "::endgroup::"
          echo "::group::Extract Natives"
          ./gradlew extractNatives || ./gradlew extractNatives || (sleep 30s && ./gradlew extractNatives)
          echo "::endgroup::"
          echo "Download Finished"
        continue-on-error: true
        env:
          CI_FORGE: ${{ matrix.forge }}
      - name: Test JUnit
        run: chmod +x ./gradlew && ./gradlew test --no-daemon --continue --warning-mode all
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          CI_FORGE: ${{ matrix.forge }}
      - name: Test runData
        run: chmod +x ./gradlew && ./gradlew runData --no-daemon
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          CI_FORGE: ${{ matrix.forge }}
#      - name: Check started and error
#        run: |
#          [ -f test_started.txt ]
#          ! [ -f error-trace.txt ]
#      - id: show-failure-log
#        if: failure()
#        run: cat error-trace.txt
